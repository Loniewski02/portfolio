"use strict";function _typeof(t){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function _regeneratorRuntime(){_regeneratorRuntime=function(){return c};var c={},t=Object.prototype,s=t.hasOwnProperty,l=Object.defineProperty||function(t,e,r){t[e]=r.value},e="function"==typeof Symbol?Symbol:{},n=e.iterator||"@@iterator",r=e.asyncIterator||"@@asyncIterator",o=e.toStringTag||"@@toStringTag";function a(t,e,r){return Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}),t[e]}try{a({},"")}catch(t){a=function(t,e,r){return t[e]=r}}function i(t,e,r,n){var o,a,c,i,e=e&&e.prototype instanceof h?e:h,e=Object.create(e.prototype),n=new w(n||[]);return l(e,"_invoke",{value:(o=t,a=r,c=n,i="suspendedStart",function(t,e){if("executing"===i)throw new Error("Generator is already running");if("completed"===i){if("throw"===t)throw e;return E()}for(c.method=t,c.arg=e;;){var r=c.delegate;if(r){r=function t(e,r){var n=r.method,o=e.iterator[n];if(void 0===o)return r.delegate=null,"throw"===n&&e.iterator.return&&(r.method="return",r.arg=void 0,t(e,r),"throw"===r.method)||"return"!==n&&(r.method="throw",r.arg=new TypeError("The iterator does not provide a '"+n+"' method")),f;n=u(o,e.iterator,r.arg);if("throw"===n.type)return r.method="throw",r.arg=n.arg,r.delegate=null,f;o=n.arg;return o?o.done?(r[e.resultName]=o.value,r.next=e.nextLoc,"return"!==r.method&&(r.method="next",r.arg=void 0),r.delegate=null,f):o:(r.method="throw",r.arg=new TypeError("iterator result is not an object"),r.delegate=null,f)}(r,c);if(r){if(r===f)continue;return r}}if("next"===c.method)c.sent=c._sent=c.arg;else if("throw"===c.method){if("suspendedStart"===i)throw i="completed",c.arg;c.dispatchException(c.arg)}else"return"===c.method&&c.abrupt("return",c.arg);i="executing";r=u(o,a,c);if("normal"===r.type){if(i=c.done?"completed":"suspendedYield",r.arg===f)continue;return{value:r.arg,done:c.done}}"throw"===r.type&&(i="completed",c.method="throw",c.arg=r.arg)}})}),e}function u(t,e,r){try{return{type:"normal",arg:t.call(e,r)}}catch(t){return{type:"throw",arg:t}}}c.wrap=i;var f={};function h(){}function p(){}function d(){}var e={},m=(a(e,n,function(){return this}),Object.getPrototypeOf),m=m&&m(m(x([]))),v=(m&&m!==t&&s.call(m,n)&&(e=m),d.prototype=h.prototype=Object.create(e));function y(t){["next","throw","return"].forEach(function(e){a(t,e,function(t){return this._invoke(e,t)})})}function g(c,i){var e;l(this,"_invoke",{value:function(r,n){function t(){return new i(function(t,e){!function e(t,r,n,o){var a,t=u(c[t],c,r);if("throw"!==t.type)return(r=(a=t.arg).value)&&"object"==_typeof(r)&&s.call(r,"__await")?i.resolve(r.__await).then(function(t){e("next",t,n,o)},function(t){e("throw",t,n,o)}):i.resolve(r).then(function(t){a.value=t,n(a)},function(t){return e("throw",t,n,o)});o(t.arg)}(r,n,t,e)})}return e=e?e.then(t,t):t()}})}function _(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function b(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function w(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(_,this),this.reset(!0)}function x(e){if(e){var r,t=e[n];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length))return r=-1,(t=function t(){for(;++r<e.length;)if(s.call(e,r))return t.value=e[r],t.done=!1,t;return t.value=void 0,t.done=!0,t}).next=t}return{next:E}}function E(){return{value:void 0,done:!0}}return l(v,"constructor",{value:p.prototype=d,configurable:!0}),l(d,"constructor",{value:p,configurable:!0}),p.displayName=a(d,o,"GeneratorFunction"),c.isGeneratorFunction=function(t){t="function"==typeof t&&t.constructor;return!!t&&(t===p||"GeneratorFunction"===(t.displayName||t.name))},c.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,d):(t.__proto__=d,a(t,o,"GeneratorFunction")),t.prototype=Object.create(v),t},c.awrap=function(t){return{__await:t}},y(g.prototype),a(g.prototype,r,function(){return this}),c.AsyncIterator=g,c.async=function(t,e,r,n,o){void 0===o&&(o=Promise);var a=new g(i(t,e,r,n),o);return c.isGeneratorFunction(e)?a:a.next().then(function(t){return t.done?t.value:a.next()})},y(v),a(v,o,"Generator"),a(v,n,function(){return this}),a(v,"toString",function(){return"[object Generator]"}),c.keys=function(t){var e,r=Object(t),n=[];for(e in r)n.push(e);return n.reverse(),function t(){for(;n.length;){var e=n.pop();if(e in r)return t.value=e,t.done=!1,t}return t.done=!0,t}},c.values=x,w.prototype={constructor:w,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(b),!t)for(var e in this)"t"===e.charAt(0)&&s.call(this,e)&&!isNaN(+e.slice(1))&&(this[e]=void 0)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(r){if(this.done)throw r;var n=this;function t(t,e){return a.type="throw",a.arg=r,n.next=t,e&&(n.method="next",n.arg=void 0),!!e}for(var e=this.tryEntries.length-1;0<=e;--e){var o=this.tryEntries[e],a=o.completion;if("root"===o.tryLoc)return t("end");if(o.tryLoc<=this.prev){var c=s.call(o,"catchLoc"),i=s.call(o,"finallyLoc");if(c&&i){if(this.prev<o.catchLoc)return t(o.catchLoc,!0);if(this.prev<o.finallyLoc)return t(o.finallyLoc)}else if(c){if(this.prev<o.catchLoc)return t(o.catchLoc,!0)}else{if(!i)throw new Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return t(o.finallyLoc)}}}},abrupt:function(t,e){for(var r=this.tryEntries.length-1;0<=r;--r){var n=this.tryEntries[r];if(n.tryLoc<=this.prev&&s.call(n,"finallyLoc")&&this.prev<n.finallyLoc){var o=n;break}}var a=(o=o&&("break"===t||"continue"===t)&&o.tryLoc<=e&&e<=o.finallyLoc?null:o)?o.completion:{};return a.type=t,a.arg=e,o?(this.method="next",this.next=o.finallyLoc,f):this.complete(a)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),f},finish:function(t){for(var e=this.tryEntries.length-1;0<=e;--e){var r=this.tryEntries[e];if(r.finallyLoc===t)return this.complete(r.completion,r.afterLoc),b(r),f}},catch:function(t){for(var e=this.tryEntries.length-1;0<=e;--e){var r,n,o=this.tryEntries[e];if(o.tryLoc===t)return"throw"===(r=o.completion).type&&(n=r.arg,b(o)),n}throw new Error("illegal catch attempt")},delegateYield:function(t,e,r){return this.delegate={iterator:x(t),resultName:e,nextLoc:r},"next"===this.method&&(this.arg=void 0),f}},c}function asyncGeneratorStep(t,e,r,n,o,a,c){try{var i=t[a](c),s=i.value}catch(t){return void r(t)}i.done?e(s):Promise.resolve(s).then(n,o)}function _asyncToGenerator(i){return function(){var t=this,c=arguments;return new Promise(function(e,r){var n=i.apply(t,c);function o(t){asyncGeneratorStep(n,e,r,o,a,"next",t)}function a(t){asyncGeneratorStep(n,e,r,o,a,"throw",t)}o(void 0)})}}var form,nameInput,emailInput,msgTextarea,allInputs,sendBtn,backBtn,aosPosition,projectsBoxes=document.querySelector(".projects__boxes"),URL="data.json",reLetters=/^[a-zA-ZąćęłńóśźżĄĆĘŁŃÓŚŹŻ\s]*$/,emailjsConfig={service_id:"service_18oof3o",template_id:"template_cnc9mcc",user_id:"rwtceOKfbHrv4W1Ff"},main=function(){prepareDOMElements(),prepareDOMEvents(),handleData()},prepareDOMElements=function(){form=document.querySelector(".footer__contact-form"),nameInput=form.querySelector("#name"),emailInput=form.querySelector("#email"),msgTextarea=form.querySelector("#msg"),allInputs=form.querySelectorAll("input, textarea"),sendBtn=document.querySelector(".send-btn"),backBtn=document.querySelector(".back-btn")},prepareDOMEvents=function(){window.addEventListener("scroll",handleBackBtn),sendBtn.addEventListener("click",function(t){t.preventDefault(),contactMain()}),handleKeyup(nameInput,checkName),handleKeyup(emailInput,checkMail),handleKeyup(msgTextarea,checkLength),nameInput.addEventListener("blur",function(){handleInputBlur(nameInput,checkName)}),emailInput.addEventListener("blur",function(){handleInputBlur(emailInput,checkMail)}),msgTextarea.addEventListener("blur",function(){handleInputBlur(msgTextarea,function(t){return checkLength(t,20)})}),allInputs.forEach(function(e){e.addEventListener("focus",function(t){e.parentElement.classList.add("footer__contact-form-box--active")}),e.addEventListener("blur",function(t){e.parentElement.classList.remove("footer__contact-form-box--active")})})};function sendEmail(){var t=nameInput.value,e=emailInput.value,r=msgTextarea.value;emailjs.send(emailjsConfig.service_id,emailjsConfig.template_id,{from_name:t,from_email:e,message:r},emailjsConfig.user_id).then(function(t){console.log(t),alert("Wiadomość została wysłana.")},function(t){console.error(t),alert("Przepraszamy, wystąpił błąd podczas wysyłania wiadomości.")})}function handleData(){return _handleData.apply(this,arguments)}function _handleData(){return(_handleData=_asyncToGenerator(_regeneratorRuntime().mark(function t(){var e;return _regeneratorRuntime().wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,axios.get(URL);case 2:e=t.sent;try{createProjects(e.data)}catch(t){console.error(t)}case 4:case"end":return t.stop()}},t)}))).apply(this,arguments)}var createProjects=function(t){for(var e=0;e<t.length;e++)aosPosition=e%2==0?"right":"left",projectsBoxes.innerHTML+='\n\t\t\t<div class="projects__box" data-aos="fade-down-'.concat(aosPosition,'" data-aos-delay="100">\n\t\t\t<div class="projects__box-img">\n\t\t\t<img src="').concat(t[e].imgPath,'" alt="">\n\t\t\t<div class="projects__box-img-links">\n\t\t\t<a href="').concat(t[e].live,'" target="_blank" rel="noopener noreferrer" data-text="view project" class="projects__box-img-link">view project</a>\n\t\t\t<a href="').concat(t[e].code,'" target="_blank" rel="noopener noreferrer" data-text="view code" class="projects__box-img-link">view code</a>\n\t\t\t</div>\n\t\t\t</div>\n\t\t\t<h3 class="projects__box-title">').concat(t[e].title,'</h3>\n\t\t\t<p class="projects__box-built-with">').concat(t[e].builtWith,'</p>\n\t\t\t<div class="projects__box-links">\n\t\t\t<a href="').concat(t[e].live,'" target="_blank" rel="noopener noreferrer" data-text="view project" class="projects__box-link projects__box-link--first">view project</a>\n\t\t\t<a href="').concat(t[e].code,'" target="_blank" rel="noopener noreferrer" data-text="view code" class="projects__box-link">view code</a>\n\t\t\t</div>\n\t\t\t</div>')},showError=function(t,e){var t=t.parentElement,r=t.querySelector(".error-ico"),n=t.querySelector(".error-info");t.classList.add("footer__contact-form-box--error"),n.textContent=e,r.classList.add("shake"),setTimeout(function(){r.classList.remove("shake")},500)},clearError=function(t){t=t.parentElement;t.classList.remove("footer__contact-form-box--error"),t.classList.add("footer__contact-form-box--succes")},checkForm=function(t){t.forEach(function(t){""===t.value?showError(t,"can't be blank!"):clearError(t)})},checkLength=function(t,e){t.value.length<e&&0<t.value.length?showError(t,"".concat(t.previousElementSibling.textContent," should consist of at least ").concat(e," characters")):t.value.length<1?showError(t,"can't be blank"):clearError(t)},checkName=function(t){t.value.length<1?showError(t,"can't be blank"):(!t.value===reLetters.test(t.value)?showError(t,"ooops! Wrong format, letters only"):clearError(t),checkLength(t,3))},checkMail=function(t){t.value.length<1?showError(t,"can't be blank"):/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,3}))$/.test(t.value)?clearError(t):showError(t,"ooops! That doesn't look like an email addres")},checkErrors=function(){var t=document.querySelectorAll(".footer__contact-form-box"),e=0;t.forEach(function(t){t.classList.contains("footer__contact-form-box--error")&&e++}),0===e&&(sendEmail(),allInputs.forEach(function(t){t.value="",t.parentElement.classList.remove("footer__contact-form-box--error"),t.parentElement.classList.remove("footer__contact-form-box--succes")}))},contactMain=function(){checkForm(allInputs),checkName(nameInput),checkLength(msgTextarea,20),checkMail(emailInput),checkErrors()},handleBackBtn=function(){600<window.scrollY?backBtn.style.display="block":backBtn.style.display="none"},handleKeyup=function(e,r){e.addEventListener("keyup",function(t){"Enter"===t.key&&r(e)})},handleInputBlur=function(t,e){""!==t.value?e(t):(t.parentElement.classList.remove("footer__contact-form-box--error"),t.parentElement.classList.remove("footer__contact-form-box--succes"))};document.addEventListener("DOMContentLoaded",main);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
